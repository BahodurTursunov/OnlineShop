networks:
  app-network:
    driver: bridge
    
volumes:
  postgres_data:
  redis_data:
  grafana-storage:

services:
  server:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    environment:
      - ConnectionStrings__DBConnection=Host=postgres;Port=5555;Database=OnlineShop;Username=bakha;Password=0046t!@#BT;
      - ConnectionStrings__Redis=redis:6379
    networks:
      - app-network

  postgres:
    image: postgres:16-alpine
    container_name: my_postgres
    restart: always
    environment:
      POSTGRES_DB: OnlineShop
      POSTGRES_USER: bakha
      POSTGRES_PASSWORD: 0046t!@#BT;
    ports:
      - "5555:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: my_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - app-network

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    networks:
      - app-network

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
    networks:
      - app-network



